//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kalitte.Sensors.Rfid.Llrp.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LlrpResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LlrpResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Kalitte.Sensors.Rfid.Llrp.Properties.LlrpResources", typeof(LlrpResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the properties of the device.  Ensure that there is a module on the device and that another connection is not opened to the module from an application running on the device. The error is {0}..
        /// </summary>
        internal static string AccessingModuleFailed {
            get {
                return ResourceManager.GetString("AccessingModuleFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property sets up the triggers for the reader to send the access results to the client. In addition, the client can enable or disable reporting of reader operation specification details in the access results..
        /// </summary>
        internal static string AccessTriggerDescription {
            get {
                return ResourceManager.GetString("AccessTriggerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding the access specification failed. See the error message for more details..
        /// </summary>
        internal static string AddingAccessSpecFailed {
            get {
                return ResourceManager.GetString("AddingAccessSpecFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding the reader operation specification failed on the device. See the error message for more details..
        /// </summary>
        internal static string AddROSpecFailedDescription {
            get {
                return ResourceManager.GetString("AddROSpecFailedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP address at which the LLRP agent is listening.
        /// </summary>
        internal static string AgentIPDescription {
            get {
                return ResourceManager.GetString("AgentIPDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device generates a report on the AI Spec end..
        /// </summary>
        internal static string AISpecEndEventDescription {
            get {
                return ResourceManager.GetString("AISpecEndEventDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device generates a report on the AI Spec end with singulation detail..
        /// </summary>
        internal static string AISpecEndWithSingulationEventDescription {
            get {
                return ResourceManager.GetString("AISpecEndWithSingulationEventDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device generates a report on antenna connect and disconnect..
        /// </summary>
        internal static string AntennaEventDescription {
            get {
                return ResourceManager.GetString("AntennaEventDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gain of the antenna in dBI*100..
        /// </summary>
        internal static string AntennaGainDescription {
            get {
                return ResourceManager.GetString("AntennaGainDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Antenna sensitivity maximum value as an index into the receive sensitivity table..
        /// </summary>
        internal static string AntennaSensitivityMaximumIndexDescription {
            get {
                return ResourceManager.GetString("AntennaSensitivityMaximumIndexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Antenna sensitivity minimum value as an index into the receive sensitivity table..
        /// </summary>
        internal static string AntennaSensitivityMinimumIndexDescription {
            get {
                return ResourceManager.GetString("AntennaSensitivityMinimumIndexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not set the property. The custom LLRP parameter could not be constructed for all the properties due to length constraints. Apply fewer properties at a time..
        /// </summary>
        internal static string ApplyPropertyFailedDueToLotOfProperties {
            get {
                return ResourceManager.GetString("ApplyPropertyFailedDueToLotOfProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot call Complete twice..
        /// </summary>
        internal static string AsynchronousResultCompleteCalledTwice {
            get {
                return ResourceManager.GetString("AsynchronousResultCompleteCalledTwice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The properties BatchSize and BatchTimeout can be used to specify how BizTalk RFID Mobile forwards events to BizTalk RFID Server.  The events are forwarded when the number of events accumulated on the device reaches BatchSize, or when the time elapsed since the last forward exceeds BatchTimeout, whichever is earlier..
        /// </summary>
        internal static string BatchConfigurationDescription {
            get {
                return ResourceManager.GetString("BatchConfigurationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag report has both fixed and variable EPC data. Tag report should have only one EPC data parameter..
        /// </summary>
        internal static string BothEPCDataPresent {
            get {
                return ResourceManager.GetString("BothEPCDataPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both time stamps are present. Specify only one time stamp parameter..
        /// </summary>
        internal static string BothTimestampPresent {
            get {
                return ResourceManager.GetString("BothTimestampPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device generates a report on buffer fill..
        /// </summary>
        internal static string BufferFillWarningEventDescription {
            get {
                return ResourceManager.GetString("BufferFillWarningEventDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the CRC bit is part of the report in Class 1 Gen 2..
        /// </summary>
        internal static string C1G2EnableCrcDescription {
            get {
                return ResourceManager.GetString("C1G2EnableCrcDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the PC bit is part of the report in Class 1 Gen 2..
        /// </summary>
        internal static string C1G2EnablePCDescription {
            get {
                return ResourceManager.GetString("C1G2EnablePCDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one action should be defined in C1G2Filter..
        /// </summary>
        internal static string C1G2FilterNoAction {
            get {
                return ResourceManager.GetString("C1G2FilterNoAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates filters present on the antenna..
        /// </summary>
        internal static string C1G2FiltersDescription {
            get {
                return ResourceManager.GetString("C1G2FiltersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device can do RF Survey..
        /// </summary>
        internal static string CanDoRFSurveyDescription {
            get {
                return ResourceManager.GetString("CanDoRFSurveyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device can do Tag Inventory State aware singulation..
        /// </summary>
        internal static string CanDOTagInventoryStateAwareSingulationDescription {
            get {
                return ResourceManager.GetString("CanDOTagInventoryStateAwareSingulationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device can report buffer fill warning..
        /// </summary>
        internal static string CanReportBufferFillWarningDescription {
            get {
                return ResourceManager.GetString("CanReportBufferFillWarningDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if properties on the antenna can be set..
        /// </summary>
        internal static string CanSetAntennaPropertiesDescription {
            get {
                return ResourceManager.GetString("CanSetAntennaPropertiesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not modify the property because the notification specification on the device could not be removed. See the Event mode property error for more details..
        /// </summary>
        internal static string CantChangeSpecificationAsExistingSpecificationCouldNotBeDeleted {
            get {
                return ResourceManager.GetString("CantChangeSpecificationAsExistingSpecificationCouldNotBeDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index into the frequency table. For a hopping antenna, this value should be ignored..
        /// </summary>
        internal static string ChannelIndexDescription {
            get {
                return ResourceManager.GetString("ChannelIndexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set to true, it deletes all the reader operation and access specifications on the device in a best-effort way. If the event mode is set to true, any inventory specifications specified by the user in the Notification group are added back to the device..
        /// </summary>
        internal static string CleanupSpecsDescription {
            get {
                return ResourceManager.GetString("CleanupSpecsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Request Op Spec time-out..
        /// </summary>
        internal static string ClientRequestOperationSpecTimeoutDescription {
            get {
                return ResourceManager.GetString("ClientRequestOperationSpecTimeoutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element {0} is null in the collection of {1}. Specify non-null values in the collection..
        /// </summary>
        internal static string CollectionElementNull {
            get {
                return ResourceManager.GetString("CollectionElementNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command timed out. The command could complete the operation on {0} tag(s) whereas it was supposed to complete on {1} tag(s). To resolve the issue increase the value of the property {2} in the group {3} to increase the time allotted for the command..
        /// </summary>
        internal static string CommandCouldNotCompleteOnDesiredTags {
            get {
                return ResourceManager.GetString("CommandCouldNotCompleteOnDesiredTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command execution failed. See the error message for more information..
        /// </summary>
        internal static string CommandExecutionFailedDescription {
            get {
                return ResourceManager.GetString("CommandExecutionFailedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid command. Command is null. Specify a valid command..
        /// </summary>
        internal static string CommandIsNull {
            get {
                return ResourceManager.GetString("CommandIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the status of the connection attempt on the device..
        /// </summary>
        internal static string ConnectionAttemptEventStatusDescription {
            get {
                return ResourceManager.GetString("ConnectionAttemptEventStatusDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection was established with the reader..
        /// </summary>
        internal static string ConnectionAttemptEventTypeDescription {
            get {
                return ResourceManager.GetString("ConnectionAttemptEventTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No data on the stream. The connection has probably been closed. Try to connect to the device again..
        /// </summary>
        internal static string ConnectionClosed {
            get {
                return ResourceManager.GetString("ConnectionClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the time interval, in milliseconds, that BizTalk RFID Mobile waits before attempting to reconnect to BizTalk RFID Server..
        /// </summary>
        internal static string ConnectionRetryIntervalDescription {
            get {
                return ResourceManager.GetString("ConnectionRetryIntervalDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection attempt timed out. Did not receive a connection attempt event from the device within the stipulated time {0}..
        /// </summary>
        internal static string ConnectionTimedout {
            get {
                return ResourceManager.GetString("ConnectionTimedout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the country code of the device operation..
        /// </summary>
        internal static string CountryCodeDescription {
            get {
                return ResourceManager.GetString("CountryCodeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Message.
        /// </summary>
        internal static string CustomMessage {
            get {
                return ResourceManager.GetString("CustomMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Parameter.
        /// </summary>
        internal static string CustomParameter {
            get {
                return ResourceManager.GetString("CustomParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a custom parameter failed. A possible reason is that the parameter has exceeded the maximum allowed length of {0}. The error received is {1}..
        /// </summary>
        internal static string CustomParameterLengthExceeded {
            get {
                return ResourceManager.GetString("CustomParameterLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message decoding failed with decoding exception {0}.
        /// </summary>
        internal static string DecodingFailed {
            get {
                return ResourceManager.GetString("DecodingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting the notification RO specification failed. See the error message for more information..
        /// </summary>
        internal static string DeleteNotificationSpecFailed {
            get {
                return ResourceManager.GetString("DeleteNotificationSpecFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting the access specification failed. See the error message for more information..
        /// </summary>
        internal static string DeletingAccessSpecFailed {
            get {
                return ResourceManager.GetString("DeletingAccessSpecFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting the reader operation specification failed. See the error message for more information..
        /// </summary>
        internal static string DeletingROSpecFailed {
            get {
                return ResourceManager.GetString("DeletingROSpecFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interval, in seconds, in which the provider should raise the discovery message for devices that initiated a connection to the provider but are not being used by the RFID service..
        /// </summary>
        internal static string DeviceInitiatedConnectionDiscoveryHeartbeatDescription {
            get {
                return ResourceManager.GetString("DeviceInitiatedConnectionDiscoveryHeartbeatDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid operation. Device is not opened. Open the device before performing any operation on the device..
        /// </summary>
        internal static string DeviceStateIsNotOpened {
            get {
                return ResourceManager.GetString("DeviceStateIsNotOpened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if access specification ID is part of the report..
        /// </summary>
        internal static string EnableAccessSpecIdDescription {
            get {
                return ResourceManager.GetString("EnableAccessSpecIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if antenna ID is part of the report..
        /// </summary>
        internal static string EnableAntennaIdDescription {
            get {
                return ResourceManager.GetString("EnableAntennaIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if channel index is part of the report..
        /// </summary>
        internal static string EnableChannelIndexDescription {
            get {
                return ResourceManager.GetString("EnableChannelIndexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if first seen time-stamp is part of the report..
        /// </summary>
        internal static string EnableFirstSeenTimestampDescription {
            get {
                return ResourceManager.GetString("EnableFirstSeenTimestampDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if inventory parameter specification ID is part of the report..
        /// </summary>
        internal static string EnableInventoryParameterSpecIdDescription {
            get {
                return ResourceManager.GetString("EnableInventoryParameterSpecIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if last seen time-stamp is part of the report..
        /// </summary>
        internal static string EnableLastSeenTimestampDescription {
            get {
                return ResourceManager.GetString("EnableLastSeenTimestampDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if peak RSSI is part of the report..
        /// </summary>
        internal static string EnablePeakRssiDescription {
            get {
                return ResourceManager.GetString("EnablePeakRssiDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling the reader operation specification failed on the device. See the error message for more information..
        /// </summary>
        internal static string EnableROSpecFailedDescription {
            get {
                return ResourceManager.GetString("EnableROSpecFailedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if RO Spec ID is part of the report..
        /// </summary>
        internal static string EnableROSpecIdDescription {
            get {
                return ResourceManager.GetString("EnableROSpecIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if Spec Index is part of the report.
        /// </summary>
        internal static string EnableSpecIndexDescription {
            get {
                return ResourceManager.GetString("EnableSpecIndexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if tag-seen count is part of the report..
        /// </summary>
        internal static string EnableTagSeenCountDescription {
            get {
                return ResourceManager.GetString("EnableTagSeenCountDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling access specification failed. See the error message for more information..
        /// </summary>
        internal static string EnablingAccessSpecFailed {
            get {
                return ResourceManager.GetString("EnablingAccessSpecFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;/Error String&gt;.
        /// </summary>
        internal static string ErrorDescriptionToStringFooter {
            get {
                return ResourceManager.GetString("ErrorDescriptionToStringFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Error String&gt;.
        /// </summary>
        internal static string ErrorDescriptionToStringHeader {
            get {
                return ResourceManager.GetString("ErrorDescriptionToStringHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not get the device ID of the device. Contact your hardware vendor for more information..
        /// </summary>
        internal static string ErrorDeviceIdNotAvailable {
            get {
                return ResourceManager.GetString("ErrorDeviceIdNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occurred during construction of LLRP message. Resolve the issue {0} and try again..
        /// </summary>
        internal static string ErrorDuringCreatingLlrpMessage {
            get {
                return ResourceManager.GetString("ErrorDuringCreatingLlrpMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider could not listen on the specified port for incoming LLRP reader connections. See the inner exception for more details..
        /// </summary>
        internal static string ErrorwhileBindingToListeningPort {
            get {
                return ResourceManager.GetString("ErrorwhileBindingToListeningPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while receiving LLRP message. See the inner exception for more details..
        /// </summary>
        internal static string ErrorWhileReceivingLlrpMessage {
            get {
                return ResourceManager.GetString("ErrorWhileReceivingLlrpMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while sending LLRP message. See the inner exception for more details..
        /// </summary>
        internal static string ErrorWhileSendingLlrpMessage {
            get {
                return ResourceManager.GetString("ErrorWhileSendingLlrpMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;/Field Error&gt;.
        /// </summary>
        internal static string FieldErrorToStringFooter {
            get {
                return ResourceManager.GetString("FieldErrorToStringFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Field Error&gt;.
        /// </summary>
        internal static string FieldErrorToStringHeader {
            get {
                return ResourceManager.GetString("FieldErrorToStringHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;/Field Number&gt;.
        /// </summary>
        internal static string FieldNumberToStringFooter {
            get {
                return ResourceManager.GetString("FieldNumberToStringFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Field Number&gt;.
        /// </summary>
        internal static string FieldNumberToStringHeader {
            get {
                return ResourceManager.GetString("FieldNumberToStringHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frequency of the device when the device is not hopping..
        /// </summary>
        internal static string FixedFrequencyTableDescription {
            get {
                return ResourceManager.GetString("FixedFrequencyTableDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frequencies of the device when the device is hopping across channels..
        /// </summary>
        internal static string FrequencyHopTableDescription {
            get {
                return ResourceManager.GetString("FrequencyHopTableDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported operation. Use the GetDevicePropertyMetadata call to get all the properties supported by the device and infer the supported group name from it..
        /// </summary>
        internal static string GetPropertyGroupNameNotSupported {
            get {
                return ResourceManager.GetString("GetPropertyGroupNameNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving source names failed..
        /// </summary>
        internal static string GetSourcesFailed {
            get {
                return ResourceManager.GetString("GetSourcesFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting reader capabilities failed. See the inner message for more details..
        /// </summary>
        internal static string GettingReaderCapabilitiesFailed {
            get {
                return ResourceManager.GetString("GettingReaderCapabilitiesFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting reader configuration failed. See the inner message for more details..
        /// </summary>
        internal static string GettingReaderConfigurationFailed {
            get {
                return ResourceManager.GetString("GettingReaderConfigurationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device generates a report on a GPI event..
        /// </summary>
        internal static string GpiEventDescription {
            get {
                return ResourceManager.GetString("GpiEventDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device has UTC clock capability..
        /// </summary>
        internal static string HasUtcClockCapabilityDescription {
            get {
                return ResourceManager.GetString("HasUtcClockCapabilityDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device holds events and reports on reconnect..
        /// </summary>
        internal static string HoldsEventsAndReportDescription {
            get {
                return ResourceManager.GetString("HoldsEventsAndReportDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device is hopping..
        /// </summary>
        internal static string HoppingDescription {
            get {
                return ResourceManager.GetString("HoppingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device generates a report on hopping to the next channel..
        /// </summary>
        internal static string HoppingEventDescription {
            get {
                return ResourceManager.GetString("HoppingEventDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID of the new frequency hop table..
        /// </summary>
        internal static string HoppingEventHopTableIdDescription {
            get {
                return ResourceManager.GetString("HoppingEventHopTableIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One-based channel index of the next channel to which the device is going to change..
        /// </summary>
        internal static string HoppingEventNextChannelIndexDescription {
            get {
                return ResourceManager.GetString("HoppingEventNextChannelIndexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device has hopped from one frequency to another..
        /// </summary>
        internal static string HoppingEventTypeDescription {
            get {
                return ResourceManager.GetString("HoppingEventTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hop Table ID.
        /// </summary>
        internal static string HopTableIdDescription {
            get {
                return ResourceManager.GetString("HopTableIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incomplete message received. Contact your hardware vendor if the problem persists..
        /// </summary>
        internal static string InCompleteMessage {
            get {
                return ResourceManager.GetString("InCompleteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incomplete message {0}. Contact your hardware vendor if the problem persists..
        /// </summary>
        internal static string InCompleteMessageWithName {
            get {
                return ResourceManager.GetString("InCompleteMessageWithName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incomplete parameter {0} received. Contact your hardware vendor if the problem persists..
        /// </summary>
        internal static string InCompleteParameter {
            get {
                return ResourceManager.GetString("InCompleteParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Infinite.
        /// </summary>
        internal static string Infinite {
            get {
                return ResourceManager.GetString("Infinite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid AI Spec stop trigger. It has both GPI and tag observation triggers. Specify only one stop trigger..
        /// </summary>
        internal static string InvalidAISpecStopTriggerNonNullGpiAndTag {
            get {
                return ResourceManager.GetString("InvalidAISpecStopTriggerNonNullGpiAndTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Antenna name is invalid. Specify a valid antenna name..
        /// </summary>
        internal static string InvalidAntennaName {
            get {
                return ResourceManager.GetString("InvalidAntennaName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid code. If the code is specified, it should be of length 4..
        /// </summary>
        internal static string InvalidCode {
            get {
                return ResourceManager.GetString("InvalidCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value {0} for type {1}. Specify a valid value of the type..
        /// </summary>
        internal static string InvalidEnum {
            get {
                return ResourceManager.GetString("InvalidEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property key is invalid or is not supported by the device. Specify a supported property of the device..
        /// </summary>
        internal static string InvalidKey {
            get {
                return ResourceManager.GetString("InvalidKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message header is corrupted. Length of the message is invalid. Contact your hardware vendor if the problem persists..
        /// </summary>
        internal static string InvalidMessageHeaderReceived {
            get {
                return ResourceManager.GetString("InvalidMessageHeaderReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid message or parameter {0}. Contact your hardware vendor if the problem persists..
        /// </summary>
        internal static string InvalidMessageOrParameter {
            get {
                return ResourceManager.GetString("InvalidMessageOrParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message version {0} is not supported. This provider works with messages whose version is 1..
        /// </summary>
        internal static string InvalidMessageVersion {
            get {
                return ResourceManager.GetString("InvalidMessageVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port output value should be a byte array of length 1 with value of either 0 or 1. 0 indicates that the port will be set at low state; 1 indicates that the port will be set at high state..
        /// </summary>
        internal static string InvalidPortOutputValue {
            get {
                return ResourceManager.GetString("InvalidPortOutputValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset is invalid for Class 1 Gen 2 read operation. Offset should be non-negative and less than 131070..
        /// </summary>
        internal static string InvalidReadTagOffset {
            get {
                return ResourceManager.GetString("InvalidReadTagOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified ROSpec identifier is invalid because there is no matching ROSpec on the device. Specify a valid ROSpec identifier..
        /// </summary>
        internal static string InvalidROSpecId {
            get {
                return ResourceManager.GetString("InvalidROSpecId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid RO-Spec start trigger. It has both GPI and periodic triggers. Specify only one trigger..
        /// </summary>
        internal static string InvalidROSpecStartTriggerNonNullGpiAndPeriodic {
            get {
                return ResourceManager.GetString("InvalidROSpecStartTriggerNonNullGpiAndPeriodic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid RO-Spec stop trigger. It has a GPI trigger when the trigger type is not a GPI type. Specify valid values for the trigger..
        /// </summary>
        internal static string InvalidROSpecStopTriggerNonNullGpi {
            get {
                return ResourceManager.GetString("InvalidROSpecStopTriggerNonNullGpi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid schema format. See the inner exception for more information..
        /// </summary>
        internal static string InvalidSchema {
            get {
                return ResourceManager.GetString("InvalidSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only Begin is supported for Seek Origin..
        /// </summary>
        internal static string InvalidSeekOrigin {
            get {
                return ResourceManager.GetString("InvalidSeekOrigin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified ROSpec is already in the disabled state..
        /// </summary>
        internal static string InvalidStateForDisableROSpec {
            get {
                return ResourceManager.GetString("InvalidStateForDisableROSpec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified ROSpec is already in one of the enabled states..
        /// </summary>
        internal static string InvalidStateForEnableROSpec {
            get {
                return ResourceManager.GetString("InvalidStateForEnableROSpec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified ROSpec cannot be started because it is already in the active state or is currently disabled..
        /// </summary>
        internal static string InvalidStateForStartROSpec {
            get {
                return ResourceManager.GetString("InvalidStateForStartROSpec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified ROSpec cannot be stopped because it is already in the inactive state or is currently disabled..
        /// </summary>
        internal static string InvalidStateForStopROSpec {
            get {
                return ResourceManager.GetString("InvalidStateForStopROSpec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Count is invalid for Class 1 Gen 2 air protocol. Count should be between 0 and 131070..
        /// </summary>
        internal static string InvalidTagReadLength {
            get {
                return ResourceManager.GetString("InvalidTagReadLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid write ID command. Command has not set any of the parameters tag ID, new access code, or new kill code. Specify at least one parameter..
        /// </summary>
        internal static string InvalidWriteIdCommand {
            get {
                return ResourceManager.GetString("InvalidWriteIdCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag data should be of even length..
        /// </summary>
        internal static string InvalidWriteTagData {
            get {
                return ResourceManager.GetString("InvalidWriteTagData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset is invalid for Class 1 Gen 2 write operation. Offset should be non-negative, at a word boundary, and less than 131070..
        /// </summary>
        internal static string InvalidWriteTagOffset {
            get {
                return ResourceManager.GetString("InvalidWriteTagOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access specification that will be added to the device when the device is in inventory mode..
        /// </summary>
        internal static string InventoryAccessSpecDescription {
            get {
                return ResourceManager.GetString("InventoryAccessSpecDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RO specification that will be executed when the device is in notification mode..
        /// </summary>
        internal static string InventoryROSpecDescription {
            get {
                return ResourceManager.GetString("InventoryROSpecDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory RO-Spec cannot be null. Specify a non-null value for the reader operation specification..
        /// </summary>
        internal static string InventoryROSpecNull {
            get {
                return ResourceManager.GetString("InventoryROSpecNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied KeepAlive interval is lower than the minimum supported value.  Specify a KeepAlive interval greater than or equal to {0}..
        /// </summary>
        internal static string KeepAliveIntervalTooLow {
            get {
                return ResourceManager.GetString("KeepAliveIntervalTooLow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port on which the agent listen for inbound connections..
        /// </summary>
        internal static string ListenerPortDescription {
            get {
                return ResourceManager.GetString("ListenerPortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message.
        /// </summary>
        internal static string LlrpMessageCommandKey {
            get {
                return ResourceManager.GetString("LlrpMessageCommandKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message in binary encoded format..
        /// </summary>
        internal static string LlrpMessageCommandKeyDescription {
            get {
                return ResourceManager.GetString("LlrpMessageCommandKeyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response.
        /// </summary>
        internal static string LlrpMessageResponseKey {
            get {
                return ResourceManager.GetString("LlrpMessageResponseKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contains the LLRP message response in binary encoded format..
        /// </summary>
        internal static string LlrpMessageResponseKeyDescription {
            get {
                return ResourceManager.GetString("LlrpMessageResponseKeyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length of time the provider will wait for the response from the device for an LLRP message. The time-out is specified in milliseconds..
        /// </summary>
        internal static string LlrpMessageTimeoutDescription {
            get {
                return ResourceManager.GetString("LlrpMessageTimeoutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute LLRP Messages command..
        /// </summary>
        internal static string LlrpMessageVendordefinedCommand {
            get {
                return ResourceManager.GetString("LlrpMessageVendordefinedCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executes the LLRP message..
        /// </summary>
        internal static string LlrpMessageVendordefinedCommandDescription {
            get {
                return ResourceManager.GetString("LlrpMessageVendordefinedCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LLRP message response..
        /// </summary>
        internal static string LlrpMessageVendordefinedResponseDescription {
            get {
                return ResourceManager.GetString("LlrpMessageVendordefinedResponseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;/Parameter Type&gt;.
        /// </summary>
        internal static string LlrpParameterTypeToStringFooter {
            get {
                return ResourceManager.GetString("LlrpParameterTypeToStringFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Parameter Type&gt;.
        /// </summary>
        internal static string LlrpParameterTypeToStringHeader {
            get {
                return ResourceManager.GetString("LlrpParameterTypeToStringHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device did not reply within the stipulated time {0}. Consider increasing the LLRP Message Timeout property if the problem persists..
        /// </summary>
        internal static string LlrpResponseTimeout {
            get {
                return ResourceManager.GetString("LlrpResponseTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID of the source as referred to in the LLRP..
        /// </summary>
        internal static string LlrpSourceIdDescription {
            get {
                return ResourceManager.GetString("LlrpSourceIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;/LLRP Status&gt;.
        /// </summary>
        internal static string LlrpStatusToStringFooter {
            get {
                return ResourceManager.GetString("LlrpStatusToStringFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;LLRP Status&gt;.
        /// </summary>
        internal static string LlrpStatusToStringHeader {
            get {
                return ResourceManager.GetString("LlrpStatusToStringHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the version of the LLRP supported by the provider..
        /// </summary>
        internal static string LlrpVersionDescription {
            get {
                return ResourceManager.GetString("LlrpVersionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LLRP Version property is a read-only property..
        /// </summary>
        internal static string LlrpVersionIsReadOnly {
            get {
                return ResourceManager.GetString("LlrpVersionIsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the time, in second, for which the provider waits for probe response from devices for a .
        /// </summary>
        internal static string MatchTimeoutDescription {
            get {
                return ResourceManager.GetString("MatchTimeoutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of antennas supported by the device..
        /// </summary>
        internal static string MaxAntennaSupportedDescription {
            get {
                return ResourceManager.GetString("MaxAntennaSupportedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of access specifications supported..
        /// </summary>
        internal static string MaximumAccessSpecDescription {
            get {
                return ResourceManager.GetString("MaximumAccessSpecDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of inventory specifications per AI..
        /// </summary>
        internal static string MaximumInventoryPerAIDescription {
            get {
                return ResourceManager.GetString("MaximumInventoryPerAIDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of select filters per query. Zero indicates no limit..
        /// </summary>
        internal static string MaximumNumSelectFiltersPerQuery {
            get {
                return ResourceManager.GetString("MaximumNumSelectFiltersPerQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of Op Specs per Access Spec..
        /// </summary>
        internal static string MaximumOperationSpecPerAccessSpecDescription {
            get {
                return ResourceManager.GetString("MaximumOperationSpecPerAccessSpecDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum priority level supported for the ROSpec..
        /// </summary>
        internal static string MaximumPriorityLevelSupportedDescription {
            get {
                return ResourceManager.GetString("MaximumPriorityLevelSupportedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of ROSpecs supported..
        /// </summary>
        internal static string MaximumROSpecDescription {
            get {
                return ResourceManager.GetString("MaximumROSpecDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of specs per ROSpec..
        /// </summary>
        internal static string MaximumSpecsPerROSpecDescription {
            get {
                return ResourceManager.GetString("MaximumSpecsPerROSpecDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message encoder factory is null. Specify a valid message encoder factory..
        /// </summary>
        internal static string MessageEncoderFactoryIsNull {
            get {
                return ResourceManager.GetString("MessageEncoderFactoryIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message encoder is null. Specify a valid message encoder..
        /// </summary>
        internal static string MessageEncoderIsNull {
            get {
                return ResourceManager.GetString("MessageEncoderIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message length exceeds maximum allowed length of {0}. Message length should not exceed 4 GB..
        /// </summary>
        internal static string MessageLengthExceeded {
            get {
                return ResourceManager.GetString("MessageLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected custom message type {0} but got type {1}. Specify a valid message type..
        /// </summary>
        internal static string MismatchInCustomMessageSubType {
            get {
                return ResourceManager.GetString("MismatchInCustomMessageSubType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type for custom parameter is {0} but received {1}. Specify a valid custom parameter type..
        /// </summary>
        internal static string MismatchInCustomSubtype {
            get {
                return ResourceManager.GetString("MismatchInCustomSubtype", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected a parameter from vendor {0} but received from {1}. Specify a valid International Assigned Number..
        /// </summary>
        internal static string MismatchInIanaNumber {
            get {
                return ResourceManager.GetString("MismatchInIanaNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing parameter {0} in message {1}. If the problem persists contact your hardware vendor..
        /// </summary>
        internal static string MissingParameterInMessage {
            get {
                return ResourceManager.GetString("MissingParameterInMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index into RF Mode table..
        /// </summary>
        internal static string ModeIndexDescription {
            get {
                return ResourceManager.GetString("ModeIndexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model name of the device..
        /// </summary>
        internal static string ModelNameDescription {
            get {
                return ResourceManager.GetString("ModelNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discovery of devices using WS-Discovery is not turned on by default in a multiple network adapter configuration. Please refer to BizTalk RFID documentation to enable WS-Discovery..
        /// </summary>
        internal static string MultipleNicWarningEventMessage {
            get {
                return ResourceManager.GetString("MultipleNicWarningEventMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of the device or source.
        /// </summary>
        internal static string NameDescription {
            get {
                return ResourceManager.GetString("NameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No EPC data found in tag report data. Device has no EPC data. If the problem persists contact your hardware vendor..
        /// </summary>
        internal static string NoEPCDataFound {
            get {
                return ResourceManager.GetString("NoEPCDataFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No module is available to establish a connection..
        /// </summary>
        internal static string NoModulePresent {
            get {
                return ResourceManager.GetString("NoModulePresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None of the time stamp is present. Device has no time stamp information. If the problem persists contact your hardware vendor..
        /// </summary>
        internal static string NoneTimestampPresent {
            get {
                return ResourceManager.GetString("NoneTimestampPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LLRP provider has currently disabled discovery of devices as there were no operational network adapters during its startup. To resolve this, ensure that the computer has a minimum of one operational network adapter with UDP multicast support, and then restart the LLRP provider..
        /// </summary>
        internal static string NoNicWarningEventMessage {
            get {
                return ResourceManager.GetString("NoNicWarningEventMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom parameter has no tag type information or invalid tag type information. Parameter should have the TagType as a serialized UTF-8 string..
        /// </summary>
        internal static string NoOrIncompleteTagTypeInCustomParameter {
            get {
                return ResourceManager.GetString("NoOrIncompleteTagTypeInCustomParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no ROSpec on the device. Add an ROSpec and retry the operation..
        /// </summary>
        internal static string NoROSpecPresent {
            get {
                return ResourceManager.GetString("NoROSpecPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider supports only TCP transport settings..
        /// </summary>
        internal static string NotSupportedConnectionType {
            get {
                return ResourceManager.GetString("NotSupportedConnectionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not a supported operation..
        /// </summary>
        internal static string NotsupportedOperation {
            get {
                return ResourceManager.GetString("NotsupportedOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received null response for message {0}. If the problem persists contact your hardware vendor..
        /// </summary>
        internal static string NullResponseForMessage {
            get {
                return ResourceManager.GetString("NullResponseForMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of General Purpose Input..
        /// </summary>
        internal static string NumberOfGpiDescription {
            get {
                return ResourceManager.GetString("NumberOfGpiDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of General Purpose Output..
        /// </summary>
        internal static string NumberOfGpoDescription {
            get {
                return ResourceManager.GetString("NumberOfGpoDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of tags before the device will report tags to the client. If zero, then the device will not report unless triggered by some other trigger..
        /// </summary>
        internal static string NumberOfTagReportDataDescription {
            get {
                return ResourceManager.GetString("NumberOfTagReportDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;/Parameter Error&gt;.
        /// </summary>
        internal static string ParameterErrorToStringFooter {
            get {
                return ResourceManager.GetString("ParameterErrorToStringFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Parameter Error&gt;.
        /// </summary>
        internal static string ParameterErrorToStringHeader {
            get {
                return ResourceManager.GetString("ParameterErrorToStringHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter length exceeds maximum allowed length of {0}..
        /// </summary>
        internal static string ParameterLengthExceeded {
            get {
                return ResourceManager.GetString("ParameterLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value of the general-purpose input port. Value is one byte in length. Value of zero indicates that the port is at low or unknown state. Value of one indicates that the port is at high state..
        /// </summary>
        internal static string PortInputValueDescription {
            get {
                return ResourceManager.GetString("PortInputValueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value of the general-purpose output port. Value should be one byte in length. Value of zero indicates that the port will be set at low state. Value of one indicates that the port will be set at high state..
        /// </summary>
        internal static string PortOutputValueDescription {
            get {
                return ResourceManager.GetString("PortOutputValueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property is not supported or one or more dependent properties are missing..
        /// </summary>
        internal static string PropertyNotSupportedOrDependentPropertyMissing {
            get {
                return ResourceManager.GetString("PropertyNotSupportedOrDependentPropertyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the property {0} is not of the expected type {1}. Provide a value of the correct type..
        /// </summary>
        internal static string PropertyOfInvalidType {
            get {
                return ResourceManager.GetString("PropertyOfInvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LLRP Device Profile.
        /// </summary>
        internal static string PropertyProfileName {
            get {
                return ResourceManager.GetString("PropertyProfileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the property {0} is less than the minimum allowed value {1}. Provide a value in the correct range..
        /// </summary>
        internal static string PropertyValueLessThanMinValue {
            get {
                return ResourceManager.GetString("PropertyValueLessThanMinValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider for LLRP devices.
        /// </summary>
        internal static string ProviderDescription {
            get {
                return ResourceManager.GetString("ProviderDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft BizTalk RFID LLRP Provider.
        /// </summary>
        internal static string ProviderId {
            get {
                return ResourceManager.GetString("ProviderId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider listens on this port for reader-initiated connections..
        /// </summary>
        internal static string ProviderListeningPortDescription {
            get {
                return ResourceManager.GetString("ProviderListeningPortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time in milliseconds for which the provider waits for a response from the device during initial handshake to the device. After the device is connected, the provider uses the time specified in the device property &quot;LLRP Message timeout&quot; in the &quot;Management&quot; group..
        /// </summary>
        internal static string ProviderLlrpMessageTimeoutDescription {
            get {
                return ResourceManager.GetString("ProviderLlrpMessageTimeoutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft BizTalk RFID LLRP Provider.
        /// </summary>
        internal static string ProviderProfileName {
            get {
                return ResourceManager.GetString("ProviderProfileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID of the access specification that was running when the exception occurred..
        /// </summary>
        internal static string ReaderExceptionEventAccessSpecDescription {
            get {
                return ResourceManager.GetString("ReaderExceptionEventAccessSpecDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of the antenna on which the exception occurred..
        /// </summary>
        internal static string ReaderExceptionEventAntennaNameDescription {
            get {
                return ResourceManager.GetString("ReaderExceptionEventAntennaNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if device generates a report on a reader exception..
        /// </summary>
        internal static string ReaderExceptionEventDescription {
            get {
                return ResourceManager.GetString("ReaderExceptionEventDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID of the inventory parameter specification that was running when the exception occurred..
        /// </summary>
        internal static string ReaderExceptionEventInventoryParameterSpecIdDescription {
            get {
                return ResourceManager.GetString("ReaderExceptionEventInventoryParameterSpecIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error message..
        /// </summary>
        internal static string ReaderExceptionEventMessageDescription {
            get {
                return ResourceManager.GetString("ReaderExceptionEventMessageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID of the operation specification that was running when the exception occurred..
        /// </summary>
        internal static string ReaderExceptionEventOperationSpecDescription {
            get {
                return ResourceManager.GetString("ReaderExceptionEventOperationSpecDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID of the reader operation specification that was running when the exception occurred..
        /// </summary>
        internal static string ReaderExceptionEventROSpecIdDescription {
            get {
                return ResourceManager.GetString("ReaderExceptionEventROSpecIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID of the specification index that was running when the exception occurred..
        /// </summary>
        internal static string ReaderExceptionEventSpecIndexDescription {
            get {
                return ResourceManager.GetString("ReaderExceptionEventSpecIndexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates an exception has occurred on the device..
        /// </summary>
        internal static string ReaderExceptionEventTypeDescription {
            get {
                return ResourceManager.GetString("ReaderExceptionEventTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LLRP provider encountered an error. Reader-initiated connections are no longer accepted. The reason is {0}. Restart the provider to fix the issue..
        /// </summary>
        internal static string ReaderInitiatedConnectionStoppedDescription {
            get {
                return ResourceManager.GetString("ReaderInitiatedConnectionStoppedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Receive sensitivity index.
        /// </summary>
        internal static string ReceiverSensitivityIndexDescription {
            get {
                return ResourceManager.GetString("ReceiverSensitivityIndexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Receive sensitivity table.
        /// </summary>
        internal static string ReceiveSensitivityTableDescription {
            get {
                return ResourceManager.GetString("ReceiveSensitivityTableDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buffer level at the device is approaching full..
        /// </summary>
        internal static string ReportBufferLevelWarningEventDescription {
            get {
                return ResourceManager.GetString("ReportBufferLevelWarningEventDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buffer overflow in the device..
        /// </summary>
        internal static string ReportBufferOverflowErrorEventDescription {
            get {
                return ResourceManager.GetString("ReportBufferOverflowErrorEventDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported command. Set the property &quot;{0}&quot; in the group &quot;{1}&quot; to reset the device to factory settings..
        /// </summary>
        internal static string ResetConfigurationToFactorySettingsCommandNotSupportedError {
            get {
                return ResourceManager.GetString("ResetConfigurationToFactorySettingsCommandNotSupportedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reader will set all configurable values to factory defaults before applying the remaining properties..
        /// </summary>
        internal static string ResetToFactoryDefaultDescription {
            get {
                return ResourceManager.GetString("ResetToFactoryDefaultDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RF mode tables for various air protocols..
        /// </summary>
        internal static string RFModeTableDescription {
            get {
                return ResourceManager.GetString("RFModeTableDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if device generates a report on RF Survey start and end..
        /// </summary>
        internal static string RFSurveyEventDescription {
            get {
                return ResourceManager.GetString("RFSurveyEventDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID of the reader operation specification that resulted in the event..
        /// </summary>
        internal static string RFSurveyEventROSpecIdDescription {
            get {
                return ResourceManager.GetString("RFSurveyEventROSpecIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID of the specification index that resulted in the event..
        /// </summary>
        internal static string RFSurveyEventSpecIndexDescription {
            get {
                return ResourceManager.GetString("RFSurveyEventSpecIndexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the type of the survey event..
        /// </summary>
        internal static string RFSurveyEventTypeDescription {
            get {
                return ResourceManager.GetString("RFSurveyEventTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that the RF survey has started or completed..
        /// </summary>
        internal static string RFSurveyNotificationEventDescription {
            get {
                return ResourceManager.GetString("RFSurveyNotificationEventDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report of the RF survey..
        /// </summary>
        internal static string RFSurveyReportEventDescription {
            get {
                return ResourceManager.GetString("RFSurveyReportEventDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serialized string of collection of &quot;FrequencyRssiLevelEntry&quot; class..
        /// </summary>
        internal static string RFSurveyReportFrequencyRssiDescription {
            get {
                return ResourceManager.GetString("RFSurveyReportFrequencyRssiDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID of the reader operation specification that generated the report..
        /// </summary>
        internal static string RFSurveyReportROSpecIdDescription {
            get {
                return ResourceManager.GetString("RFSurveyReportROSpecIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID of the spec index that generated the report..
        /// </summary>
        internal static string RFSurveyReportSpecIndexDescription {
            get {
                return ResourceManager.GetString("RFSurveyReportSpecIndexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An ROSpec is already present. If you want to add a new ROSpec, delete the existing ROSpec and try again..
        /// </summary>
        internal static string ROSpecAlreadyPresent {
            get {
                return ResourceManager.GetString("ROSpecAlreadyPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if device generates a report on RO start/end/preempt..
        /// </summary>
        internal static string ROSpecEventDescription {
            get {
                return ResourceManager.GetString("ROSpecEventDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one spec should be defined in ROSpec. Specify at least one inventory, RF survey, or custom parameter..
        /// </summary>
        internal static string ROSpecNoSpec {
            get {
                return ResourceManager.GetString("ROSpecNoSpec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger.
        /// </summary>
        internal static string ROTriggerDescription {
            get {
                return ResourceManager.GetString("ROTriggerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reader signal strength indicator should be between -128 and 127..
        /// </summary>
        internal static string RssiValidValue {
            get {
                return ResourceManager.GetString("RssiValidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device should send keep-alive messages periodically..
        /// </summary>
        internal static string SendKeepaliveDescription {
            get {
                return ResourceManager.GetString("SendKeepaliveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the C1G2 session number that the tags use to update the inventory state upon successful singulation..
        /// </summary>
        internal static string SessionDescription {
            get {
                return ResourceManager.GetString("SessionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not apply one or more properties on the device. See the inner exception for more details..
        /// </summary>
        internal static string SetPropertyFailedDescription {
            get {
                return ResourceManager.GetString("SetPropertyFailedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error was encountered while attempting to apply the properties. The error is: {0}..
        /// </summary>
        internal static string SettingConfigurationFailed {
            get {
                return ResourceManager.GetString("SettingConfigurationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property could not be applied because it specifies both input port profile and output port profile for the same source. Specify the input and output profiles separately..
        /// </summary>
        internal static string SettingInputAndOutputProfilesTogether {
            get {
                return ResourceManager.GetString("SettingInputAndOutputProfilesTogether", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting the parameter {0} is not supported. Remove the parameter and try again..
        /// </summary>
        internal static string SettingUnsupportedParameter {
            get {
                return ResourceManager.GetString("SettingUnsupportedParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates state of the reader..
        /// </summary>
        internal static string StateDescription {
            get {
                return ResourceManager.GetString("StateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;/Error Code&gt;.
        /// </summary>
        internal static string StatusCodeToStringFooter {
            get {
                return ResourceManager.GetString("StatusCodeToStringFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Error Code&gt;.
        /// </summary>
        internal static string StatusCodeToStringHeader {
            get {
                return ResourceManager.GetString("StatusCodeToStringHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        internal static string SuccessStatusString {
            get {
                return ResourceManager.GetString("SuccessStatusString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device supports block erase..
        /// </summary>
        internal static string SupportsBlockEraseDescription {
            get {
                return ResourceManager.GetString("SupportsBlockEraseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device supports block write..
        /// </summary>
        internal static string SupportsBlockWriteDescription {
            get {
                return ResourceManager.GetString("SupportsBlockWriteDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device supports Client Request Operation Spec..
        /// </summary>
        internal static string SupportsClientOperationSpecDescription {
            get {
                return ResourceManager.GetString("SupportsClientOperationSpecDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the device supports event and report holding..
        /// </summary>
        internal static string SupportsEventAndReportHoldingDescription {
            get {
                return ResourceManager.GetString("SupportsEventAndReportHoldingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duration for which inventory is carried during a synchronous command. This time is in milliseconds..
        /// </summary>
        internal static string SynchronousCommandInventoryDurationDescription {
            get {
                return ResourceManager.GetString("SynchronousCommandInventoryDurationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the maximum number of tags on which the synchronous operation will be carried out before the command completes. A value of zero indicates, no limit on the count of tags on which the command can operate. This value is used for lock, un-lock, kill, write tag ID, write tag data and write partial tag data command..
        /// </summary>
        internal static string SynchronousCommandOperationCountDescription {
            get {
                return ResourceManager.GetString("SynchronousCommandOperationCountDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag data is empty. Specify some data in the tag..
        /// </summary>
        internal static string TagDataNullOrEmpty {
            get {
                return ResourceManager.GetString("TagDataNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag data selector is not initialized. Specify a tag data selector with some fields set..
        /// </summary>
        internal static string TagDataSelectorUnInitialized {
            get {
                return ResourceManager.GetString("TagDataSelectorUnInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to True indicates that the client is managing the tag states during an inventory operation..
        /// </summary>
        internal static string TagInventoryStateAwareDescription {
            get {
                return ResourceManager.GetString("TagInventoryStateAwareDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is used if the TagInventoryStateAware flag is set to true in the InventoryParameterSpec. This is the state of the SL flag in the tag. Only tags that match this tag state participate in the inventory round. If the Ignore value is specified, the reader ignores this field, and the reader implementation must determine the value used in the inventory round..
        /// </summary>
        internal static string TagInventoryStateAwareSingulationActionSLFlagDescription {
            get {
                return ResourceManager.GetString("TagInventoryStateAwareSingulationActionSLFlagDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is used if the TagInventoryStateAware flag is set to true in the InventoryParameterSpec. This is the inventoried state of the target tag population in the selected session. Only tags that match this session state participate in the inventory round. If the Ignore value is specified, the reader ignores this field, and the reader implementation must determine the value used in the inventory round..
        /// </summary>
        internal static string TagInventoryStateAwareSingulationActionStateDescription {
            get {
                return ResourceManager.GetString("TagInventoryStateAwareSingulationActionStateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mask length and data length does not match. Specify data and mask of the same length..
        /// </summary>
        internal static string TagMaskAndDataLengthDoesNotMatch {
            get {
                return ResourceManager.GetString("TagMaskAndDataLengthDoesNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the expected tag population in the field of view of the antenna..
        /// </summary>
        internal static string TagPopulationDescription {
            get {
                return ResourceManager.GetString("TagPopulationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the measure of expected tag mobility in the field of view of the antenna where this inventory operation is running..
        /// </summary>
        internal static string TagTransitTimeDescription {
            get {
                return ResourceManager.GetString("TagTransitTimeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value of Tari to use for this mode, specified in nanoseconds. This value is specified if the selected mode has a Tari range. If the selected mode has a range, and the Tari value is set to zero, the reader implementation picks up any Tari value within the range. If the selected mode has a range, and the specified Tari value is out of that range and is not set to zero, an error message is generated..
        /// </summary>
        internal static string TariDescription {
            get {
                return ResourceManager.GetString("TariDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TCP client should be connected. Ensure that the TCP client is connected..
        /// </summary>
        internal static string TcpClientNotConnected {
            get {
                return ResourceManager.GetString("TcpClientNotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time in milliseconds after which a keep-alive message is sent to the device if there is no activity on the connection. Changes in this value will be effective only for new device connections..
        /// </summary>
        internal static string TcpKeepAliveTimeDescription {
            get {
                return ResourceManager.GetString("TcpKeepAliveTimeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interval during which the message should be sent..
        /// </summary>
        internal static string TimeIntervalDescription {
            get {
                return ResourceManager.GetString("TimeIntervalDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index into the transmit power table..
        /// </summary>
        internal static string TransmitPowerIndexDescription {
            get {
                return ResourceManager.GetString("TransmitPowerIndexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transmit power table of the device..
        /// </summary>
        internal static string TransmitPowerTableDescription {
            get {
                return ResourceManager.GetString("TransmitPowerTableDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received a {0} message when expecting a {1} message..
        /// </summary>
        internal static string UnexpectedMessageReceived {
            get {
                return ResourceManager.GetString("UnexpectedMessageReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown message {0} in the command. Specify a valid response..
        /// </summary>
        internal static string UnknownLlrpMessage {
            get {
                return ResourceManager.GetString("UnknownLlrpMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown TV parameter {0}. If the problem persists contact your hardware vendor..
        /// </summary>
        internal static string UnKnownTVParameter {
            get {
                return ResourceManager.GetString("UnKnownTVParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected message type is {0}; current type is {1}. If the problem persists contact your hardware vendor..
        /// </summary>
        internal static string UnMatchedMessageType {
            get {
                return ResourceManager.GetString("UnMatchedMessageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported command. This operation is not supported by the provider..
        /// </summary>
        internal static string UnsupportedCommand {
            get {
                return ResourceManager.GetString("UnsupportedCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The received message of type {0} is not supported..
        /// </summary>
        internal static string UnsupportedMessageAtAgent {
            get {
                return ResourceManager.GetString("UnsupportedMessageAtAgent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported property {0}. Specify a supported property..
        /// </summary>
        internal static string UnsupportedProperty {
            get {
                return ResourceManager.GetString("UnsupportedProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value supplied for the parameter {0} is not supported. Change the value and try again..
        /// </summary>
        internal static string UnsupportedValueForParameter {
            get {
                return ResourceManager.GetString("UnsupportedValueForParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command does not contain any LLRP message. Specify a message as part of the command. Use the method on the message to create a command..
        /// </summary>
        internal static string VendorDefinedCommandDoesNotContainMessage {
            get {
                return ResourceManager.GetString("VendorDefinedCommandDoesNotContainMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command does not contain a response. Specify a command that contains a valid response..
        /// </summary>
        internal static string VendorDefinedCommandDoesNotContainMessageResponse {
            get {
                return ResourceManager.GetString("VendorDefinedCommandDoesNotContainMessageResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LLRP message is not in a valid format. Expected type is {0} but current type is {1}. Specify a command with a valid format. If the problem persists contact your hardware vendor..
        /// </summary>
        internal static string VendorDefinedMessageNotInValidFormat {
            get {
                return ResourceManager.GetString("VendorDefinedMessageNotInValidFormat", resourceCulture);
            }
        }
    }
}
