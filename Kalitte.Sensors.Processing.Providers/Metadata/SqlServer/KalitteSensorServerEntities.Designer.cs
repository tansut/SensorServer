//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("KalitteSensorServerModel", "FK_EventProcessorDispatcherBinding_Dispatcher", "Dispatcher", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.Dispatcher), "EventProcessorDispatcherBinding", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.EventProcessorDispatcherBinding), true)]
[assembly: EdmRelationshipAttribute("KalitteSensorServerModel", "FK_EventProcessorDispatcherBinding_EventProcessor", "EventProcessor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.EventProcessor), "EventProcessorDispatcherBinding", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.EventProcessorDispatcherBinding), true)]
[assembly: EdmRelationshipAttribute("KalitteSensorServerModel", "FK_EventProcessorLogicalSensorBinding_EventProcessor", "EventProcessor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.EventProcessor), "EventProcessorLogicalSensorBinding", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.EventProcessorLogicalSensorBinding), true)]
[assembly: EdmRelationshipAttribute("KalitteSensorServerModel", "FK_EventProcessorLogicalSensorBinding_LogicalSensor", "LogicalSensor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.LogicalSensor), "EventProcessorLogicalSensorBinding", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.EventProcessorLogicalSensorBinding), true)]
[assembly: EdmRelationshipAttribute("KalitteSensorServerModel", "FK_LogicalSensorBinding_LogicalSensor", "LogicalSensor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.LogicalSensor), "LogicalSensorBinding", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.LogicalSensorBinding), true)]
[assembly: EdmRelationshipAttribute("KalitteSensorServerModel", "FK_EventProcessorModuleBinding_EventModule", "EventModule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.EventModule), "EventProcessorModuleBinding", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.EventProcessorModuleBinding), true)]
[assembly: EdmRelationshipAttribute("KalitteSensorServerModel", "FK_EventProcessorModuleBinding_EventProcessor", "EventProcessor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.EventProcessor), "EventProcessorModuleBinding", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.EventProcessorModuleBinding), true)]
[assembly: EdmRelationshipAttribute("KalitteSensorServerModel", "FK_LogicalSensorBinding_SensorDevice", "SensorDevice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.SensorDevice), "LogicalSensorBinding", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.LogicalSensorBinding), true)]
[assembly: EdmRelationshipAttribute("KalitteSensorServerModel", "FK_SensorDevice_SensorProvider", "SensorProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.SensorProvider), "SensorDevice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kalitte.Sensors.Processing.Providers.Metadata.SqlServer.SensorDevice))]

#endregion

namespace Kalitte.Sensors.Processing.Providers.Metadata.SqlServer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class KalitteSensorServerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new KalitteSensorServerEntities object using the connection string found in the 'KalitteSensorServerEntities' section of the application configuration file.
        /// </summary>
        public KalitteSensorServerEntities() : base("name=KalitteSensorServerEntities", "KalitteSensorServerEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new KalitteSensorServerEntities object.
        /// </summary>
        public KalitteSensorServerEntities(string connectionString) : base(connectionString, "KalitteSensorServerEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new KalitteSensorServerEntities object.
        /// </summary>
        public KalitteSensorServerEntities(EntityConnection connection) : base(connection, "KalitteSensorServerEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SensorProvider> SensorProvider
        {
            get
            {
                if ((_SensorProvider == null))
                {
                    _SensorProvider = base.CreateObjectSet<SensorProvider>("SensorProvider");
                }
                return _SensorProvider;
            }
        }
        private ObjectSet<SensorProvider> _SensorProvider;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dispatcher> Dispatcher
        {
            get
            {
                if ((_Dispatcher == null))
                {
                    _Dispatcher = base.CreateObjectSet<Dispatcher>("Dispatcher");
                }
                return _Dispatcher;
            }
        }
        private ObjectSet<Dispatcher> _Dispatcher;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventModule> EventModule
        {
            get
            {
                if ((_EventModule == null))
                {
                    _EventModule = base.CreateObjectSet<EventModule>("EventModule");
                }
                return _EventModule;
            }
        }
        private ObjectSet<EventModule> _EventModule;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventProcessor> EventProcessor
        {
            get
            {
                if ((_EventProcessor == null))
                {
                    _EventProcessor = base.CreateObjectSet<EventProcessor>("EventProcessor");
                }
                return _EventProcessor;
            }
        }
        private ObjectSet<EventProcessor> _EventProcessor;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventProcessorDispatcherBinding> EventProcessorDispatcherBinding
        {
            get
            {
                if ((_EventProcessorDispatcherBinding == null))
                {
                    _EventProcessorDispatcherBinding = base.CreateObjectSet<EventProcessorDispatcherBinding>("EventProcessorDispatcherBinding");
                }
                return _EventProcessorDispatcherBinding;
            }
        }
        private ObjectSet<EventProcessorDispatcherBinding> _EventProcessorDispatcherBinding;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventProcessorLogicalSensorBinding> EventProcessorLogicalSensorBinding
        {
            get
            {
                if ((_EventProcessorLogicalSensorBinding == null))
                {
                    _EventProcessorLogicalSensorBinding = base.CreateObjectSet<EventProcessorLogicalSensorBinding>("EventProcessorLogicalSensorBinding");
                }
                return _EventProcessorLogicalSensorBinding;
            }
        }
        private ObjectSet<EventProcessorLogicalSensorBinding> _EventProcessorLogicalSensorBinding;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogicalSensor> LogicalSensor
        {
            get
            {
                if ((_LogicalSensor == null))
                {
                    _LogicalSensor = base.CreateObjectSet<LogicalSensor>("LogicalSensor");
                }
                return _LogicalSensor;
            }
        }
        private ObjectSet<LogicalSensor> _LogicalSensor;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogicalSensorBinding> LogicalSensorBinding
        {
            get
            {
                if ((_LogicalSensorBinding == null))
                {
                    _LogicalSensorBinding = base.CreateObjectSet<LogicalSensorBinding>("LogicalSensorBinding");
                }
                return _LogicalSensorBinding;
            }
        }
        private ObjectSet<LogicalSensorBinding> _LogicalSensorBinding;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventProcessorModuleBinding> EventProcessorModuleBinding
        {
            get
            {
                if ((_EventProcessorModuleBinding == null))
                {
                    _EventProcessorModuleBinding = base.CreateObjectSet<EventProcessorModuleBinding>("EventProcessorModuleBinding");
                }
                return _EventProcessorModuleBinding;
            }
        }
        private ObjectSet<EventProcessorModuleBinding> _EventProcessorModuleBinding;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SensorDevice> SensorDevice
        {
            get
            {
                if ((_SensorDevice == null))
                {
                    _SensorDevice = base.CreateObjectSet<SensorDevice>("SensorDevice");
                }
                return _SensorDevice;
            }
        }
        private ObjectSet<SensorDevice> _SensorDevice;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SensorProvider EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSensorProvider(SensorProvider sensorProvider)
        {
            base.AddObject("SensorProvider", sensorProvider);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Dispatcher EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDispatcher(Dispatcher dispatcher)
        {
            base.AddObject("Dispatcher", dispatcher);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventModule EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventModule(EventModule eventModule)
        {
            base.AddObject("EventModule", eventModule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventProcessor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventProcessor(EventProcessor eventProcessor)
        {
            base.AddObject("EventProcessor", eventProcessor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventProcessorDispatcherBinding EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventProcessorDispatcherBinding(EventProcessorDispatcherBinding eventProcessorDispatcherBinding)
        {
            base.AddObject("EventProcessorDispatcherBinding", eventProcessorDispatcherBinding);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventProcessorLogicalSensorBinding EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventProcessorLogicalSensorBinding(EventProcessorLogicalSensorBinding eventProcessorLogicalSensorBinding)
        {
            base.AddObject("EventProcessorLogicalSensorBinding", eventProcessorLogicalSensorBinding);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogicalSensor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogicalSensor(LogicalSensor logicalSensor)
        {
            base.AddObject("LogicalSensor", logicalSensor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogicalSensorBinding EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogicalSensorBinding(LogicalSensorBinding logicalSensorBinding)
        {
            base.AddObject("LogicalSensorBinding", logicalSensorBinding);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventProcessorModuleBinding EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventProcessorModuleBinding(EventProcessorModuleBinding eventProcessorModuleBinding)
        {
            base.AddObject("EventProcessorModuleBinding", eventProcessorModuleBinding);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SensorDevice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSensorDevice(SensorDevice sensorDevice)
        {
            base.AddObject("SensorDevice", sensorDevice);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KalitteSensorServerModel", Name="Dispatcher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dispatcher : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dispatcher object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="typeQ">Initial value of the TypeQ property.</param>
        /// <param name="definition">Initial value of the Definition property.</param>
        /// <param name="runtime">Initial value of the Runtime property.</param>
        public static Dispatcher CreateDispatcher(global::System.String name, global::System.String typeQ, global::System.String definition, global::System.String runtime)
        {
            Dispatcher dispatcher = new Dispatcher();
            dispatcher.Name = name;
            dispatcher.TypeQ = typeQ;
            dispatcher.Definition = definition;
            dispatcher.Runtime = runtime;
            return dispatcher;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeQ
        {
            get
            {
                return _TypeQ;
            }
            set
            {
                OnTypeQChanging(value);
                ReportPropertyChanging("TypeQ");
                _TypeQ = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeQ");
                OnTypeQChanged();
            }
        }
        private global::System.String _TypeQ;
        partial void OnTypeQChanging(global::System.String value);
        partial void OnTypeQChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Definition
        {
            get
            {
                return _Definition;
            }
            set
            {
                OnDefinitionChanging(value);
                ReportPropertyChanging("Definition");
                _Definition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Definition");
                OnDefinitionChanged();
            }
        }
        private global::System.String _Definition;
        partial void OnDefinitionChanging(global::System.String value);
        partial void OnDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Runtime
        {
            get
            {
                return _Runtime;
            }
            set
            {
                OnRuntimeChanging(value);
                ReportPropertyChanging("Runtime");
                _Runtime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Runtime");
                OnRuntimeChanged();
            }
        }
        private global::System.String _Runtime;
        partial void OnRuntimeChanging(global::System.String value);
        partial void OnRuntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_EventProcessorDispatcherBinding_Dispatcher", "EventProcessorDispatcherBinding")]
        public EntityCollection<EventProcessorDispatcherBinding> EventProcessorDispatcherBinding
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventProcessorDispatcherBinding>("KalitteSensorServerModel.FK_EventProcessorDispatcherBinding_Dispatcher", "EventProcessorDispatcherBinding");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventProcessorDispatcherBinding>("KalitteSensorServerModel.FK_EventProcessorDispatcherBinding_Dispatcher", "EventProcessorDispatcherBinding", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KalitteSensorServerModel", Name="EventModule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventModule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventModule object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="typeQ">Initial value of the TypeQ property.</param>
        /// <param name="definition">Initial value of the Definition property.</param>
        /// <param name="runtime">Initial value of the Runtime property.</param>
        public static EventModule CreateEventModule(global::System.String name, global::System.String typeQ, global::System.String definition, global::System.String runtime)
        {
            EventModule eventModule = new EventModule();
            eventModule.Name = name;
            eventModule.TypeQ = typeQ;
            eventModule.Definition = definition;
            eventModule.Runtime = runtime;
            return eventModule;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeQ
        {
            get
            {
                return _TypeQ;
            }
            set
            {
                OnTypeQChanging(value);
                ReportPropertyChanging("TypeQ");
                _TypeQ = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeQ");
                OnTypeQChanged();
            }
        }
        private global::System.String _TypeQ;
        partial void OnTypeQChanging(global::System.String value);
        partial void OnTypeQChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Definition
        {
            get
            {
                return _Definition;
            }
            set
            {
                OnDefinitionChanging(value);
                ReportPropertyChanging("Definition");
                _Definition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Definition");
                OnDefinitionChanged();
            }
        }
        private global::System.String _Definition;
        partial void OnDefinitionChanging(global::System.String value);
        partial void OnDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Runtime
        {
            get
            {
                return _Runtime;
            }
            set
            {
                OnRuntimeChanging(value);
                ReportPropertyChanging("Runtime");
                _Runtime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Runtime");
                OnRuntimeChanged();
            }
        }
        private global::System.String _Runtime;
        partial void OnRuntimeChanging(global::System.String value);
        partial void OnRuntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_EventProcessorModuleBinding_EventModule", "EventProcessorModuleBinding")]
        public EntityCollection<EventProcessorModuleBinding> EventProcessorModuleBinding
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventProcessorModuleBinding>("KalitteSensorServerModel.FK_EventProcessorModuleBinding_EventModule", "EventProcessorModuleBinding");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventProcessorModuleBinding>("KalitteSensorServerModel.FK_EventProcessorModuleBinding_EventModule", "EventProcessorModuleBinding", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KalitteSensorServerModel", Name="EventProcessor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventProcessor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventProcessor object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="definition">Initial value of the Definition property.</param>
        /// <param name="runtime">Initial value of the Runtime property.</param>
        public static EventProcessor CreateEventProcessor(global::System.String name, global::System.String definition, global::System.String runtime)
        {
            EventProcessor eventProcessor = new EventProcessor();
            eventProcessor.Name = name;
            eventProcessor.Definition = definition;
            eventProcessor.Runtime = runtime;
            return eventProcessor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Definition
        {
            get
            {
                return _Definition;
            }
            set
            {
                OnDefinitionChanging(value);
                ReportPropertyChanging("Definition");
                _Definition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Definition");
                OnDefinitionChanged();
            }
        }
        private global::System.String _Definition;
        partial void OnDefinitionChanging(global::System.String value);
        partial void OnDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Runtime
        {
            get
            {
                return _Runtime;
            }
            set
            {
                OnRuntimeChanging(value);
                ReportPropertyChanging("Runtime");
                _Runtime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Runtime");
                OnRuntimeChanged();
            }
        }
        private global::System.String _Runtime;
        partial void OnRuntimeChanging(global::System.String value);
        partial void OnRuntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_EventProcessorDispatcherBinding_EventProcessor", "EventProcessorDispatcherBinding")]
        public EntityCollection<EventProcessorDispatcherBinding> EventProcessorDispatcherBinding
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventProcessorDispatcherBinding>("KalitteSensorServerModel.FK_EventProcessorDispatcherBinding_EventProcessor", "EventProcessorDispatcherBinding");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventProcessorDispatcherBinding>("KalitteSensorServerModel.FK_EventProcessorDispatcherBinding_EventProcessor", "EventProcessorDispatcherBinding", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_EventProcessorLogicalSensorBinding_EventProcessor", "EventProcessorLogicalSensorBinding")]
        public EntityCollection<EventProcessorLogicalSensorBinding> EventProcessorLogicalSensorBinding
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventProcessorLogicalSensorBinding>("KalitteSensorServerModel.FK_EventProcessorLogicalSensorBinding_EventProcessor", "EventProcessorLogicalSensorBinding");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventProcessorLogicalSensorBinding>("KalitteSensorServerModel.FK_EventProcessorLogicalSensorBinding_EventProcessor", "EventProcessorLogicalSensorBinding", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_EventProcessorModuleBinding_EventProcessor", "EventProcessorModuleBinding")]
        public EntityCollection<EventProcessorModuleBinding> EventProcessorModuleBinding
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventProcessorModuleBinding>("KalitteSensorServerModel.FK_EventProcessorModuleBinding_EventProcessor", "EventProcessorModuleBinding");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventProcessorModuleBinding>("KalitteSensorServerModel.FK_EventProcessorModuleBinding_EventProcessor", "EventProcessorModuleBinding", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KalitteSensorServerModel", Name="EventProcessorDispatcherBinding")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventProcessorDispatcherBinding : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventProcessorDispatcherBinding object.
        /// </summary>
        /// <param name="eventProcessorID">Initial value of the EventProcessorID property.</param>
        /// <param name="dispatcherID">Initial value of the DispatcherID property.</param>
        /// <param name="definition">Initial value of the Definition property.</param>
        /// <param name="runtime">Initial value of the Runtime property.</param>
        public static EventProcessorDispatcherBinding CreateEventProcessorDispatcherBinding(global::System.String eventProcessorID, global::System.String dispatcherID, global::System.String definition, global::System.String runtime)
        {
            EventProcessorDispatcherBinding eventProcessorDispatcherBinding = new EventProcessorDispatcherBinding();
            eventProcessorDispatcherBinding.EventProcessorID = eventProcessorID;
            eventProcessorDispatcherBinding.DispatcherID = dispatcherID;
            eventProcessorDispatcherBinding.Definition = definition;
            eventProcessorDispatcherBinding.Runtime = runtime;
            return eventProcessorDispatcherBinding;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventProcessorID
        {
            get
            {
                return _EventProcessorID;
            }
            set
            {
                if (_EventProcessorID != value)
                {
                    OnEventProcessorIDChanging(value);
                    ReportPropertyChanging("EventProcessorID");
                    _EventProcessorID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EventProcessorID");
                    OnEventProcessorIDChanged();
                }
            }
        }
        private global::System.String _EventProcessorID;
        partial void OnEventProcessorIDChanging(global::System.String value);
        partial void OnEventProcessorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DispatcherID
        {
            get
            {
                return _DispatcherID;
            }
            set
            {
                if (_DispatcherID != value)
                {
                    OnDispatcherIDChanging(value);
                    ReportPropertyChanging("DispatcherID");
                    _DispatcherID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DispatcherID");
                    OnDispatcherIDChanged();
                }
            }
        }
        private global::System.String _DispatcherID;
        partial void OnDispatcherIDChanging(global::System.String value);
        partial void OnDispatcherIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Definition
        {
            get
            {
                return _Definition;
            }
            set
            {
                OnDefinitionChanging(value);
                ReportPropertyChanging("Definition");
                _Definition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Definition");
                OnDefinitionChanged();
            }
        }
        private global::System.String _Definition;
        partial void OnDefinitionChanging(global::System.String value);
        partial void OnDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Runtime
        {
            get
            {
                return _Runtime;
            }
            set
            {
                OnRuntimeChanging(value);
                ReportPropertyChanging("Runtime");
                _Runtime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Runtime");
                OnRuntimeChanged();
            }
        }
        private global::System.String _Runtime;
        partial void OnRuntimeChanging(global::System.String value);
        partial void OnRuntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_EventProcessorDispatcherBinding_Dispatcher", "Dispatcher")]
        public Dispatcher Dispatcher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dispatcher>("KalitteSensorServerModel.FK_EventProcessorDispatcherBinding_Dispatcher", "Dispatcher").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dispatcher>("KalitteSensorServerModel.FK_EventProcessorDispatcherBinding_Dispatcher", "Dispatcher").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dispatcher> DispatcherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dispatcher>("KalitteSensorServerModel.FK_EventProcessorDispatcherBinding_Dispatcher", "Dispatcher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dispatcher>("KalitteSensorServerModel.FK_EventProcessorDispatcherBinding_Dispatcher", "Dispatcher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_EventProcessorDispatcherBinding_EventProcessor", "EventProcessor")]
        public EventProcessor EventProcessor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventProcessor>("KalitteSensorServerModel.FK_EventProcessorDispatcherBinding_EventProcessor", "EventProcessor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventProcessor>("KalitteSensorServerModel.FK_EventProcessorDispatcherBinding_EventProcessor", "EventProcessor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventProcessor> EventProcessorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventProcessor>("KalitteSensorServerModel.FK_EventProcessorDispatcherBinding_EventProcessor", "EventProcessor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventProcessor>("KalitteSensorServerModel.FK_EventProcessorDispatcherBinding_EventProcessor", "EventProcessor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KalitteSensorServerModel", Name="EventProcessorLogicalSensorBinding")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventProcessorLogicalSensorBinding : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventProcessorLogicalSensorBinding object.
        /// </summary>
        /// <param name="eventProcessorID">Initial value of the EventProcessorID property.</param>
        /// <param name="logicalSensorID">Initial value of the LogicalSensorID property.</param>
        /// <param name="definition">Initial value of the Definition property.</param>
        /// <param name="runtime">Initial value of the Runtime property.</param>
        public static EventProcessorLogicalSensorBinding CreateEventProcessorLogicalSensorBinding(global::System.String eventProcessorID, global::System.String logicalSensorID, global::System.String definition, global::System.String runtime)
        {
            EventProcessorLogicalSensorBinding eventProcessorLogicalSensorBinding = new EventProcessorLogicalSensorBinding();
            eventProcessorLogicalSensorBinding.EventProcessorID = eventProcessorID;
            eventProcessorLogicalSensorBinding.LogicalSensorID = logicalSensorID;
            eventProcessorLogicalSensorBinding.Definition = definition;
            eventProcessorLogicalSensorBinding.Runtime = runtime;
            return eventProcessorLogicalSensorBinding;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventProcessorID
        {
            get
            {
                return _EventProcessorID;
            }
            set
            {
                if (_EventProcessorID != value)
                {
                    OnEventProcessorIDChanging(value);
                    ReportPropertyChanging("EventProcessorID");
                    _EventProcessorID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EventProcessorID");
                    OnEventProcessorIDChanged();
                }
            }
        }
        private global::System.String _EventProcessorID;
        partial void OnEventProcessorIDChanging(global::System.String value);
        partial void OnEventProcessorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogicalSensorID
        {
            get
            {
                return _LogicalSensorID;
            }
            set
            {
                if (_LogicalSensorID != value)
                {
                    OnLogicalSensorIDChanging(value);
                    ReportPropertyChanging("LogicalSensorID");
                    _LogicalSensorID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LogicalSensorID");
                    OnLogicalSensorIDChanged();
                }
            }
        }
        private global::System.String _LogicalSensorID;
        partial void OnLogicalSensorIDChanging(global::System.String value);
        partial void OnLogicalSensorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Definition
        {
            get
            {
                return _Definition;
            }
            set
            {
                OnDefinitionChanging(value);
                ReportPropertyChanging("Definition");
                _Definition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Definition");
                OnDefinitionChanged();
            }
        }
        private global::System.String _Definition;
        partial void OnDefinitionChanging(global::System.String value);
        partial void OnDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Runtime
        {
            get
            {
                return _Runtime;
            }
            set
            {
                OnRuntimeChanging(value);
                ReportPropertyChanging("Runtime");
                _Runtime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Runtime");
                OnRuntimeChanged();
            }
        }
        private global::System.String _Runtime;
        partial void OnRuntimeChanging(global::System.String value);
        partial void OnRuntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_EventProcessorLogicalSensorBinding_EventProcessor", "EventProcessor")]
        public EventProcessor EventProcessor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventProcessor>("KalitteSensorServerModel.FK_EventProcessorLogicalSensorBinding_EventProcessor", "EventProcessor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventProcessor>("KalitteSensorServerModel.FK_EventProcessorLogicalSensorBinding_EventProcessor", "EventProcessor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventProcessor> EventProcessorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventProcessor>("KalitteSensorServerModel.FK_EventProcessorLogicalSensorBinding_EventProcessor", "EventProcessor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventProcessor>("KalitteSensorServerModel.FK_EventProcessorLogicalSensorBinding_EventProcessor", "EventProcessor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_EventProcessorLogicalSensorBinding_LogicalSensor", "LogicalSensor")]
        public LogicalSensor LogicalSensor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogicalSensor>("KalitteSensorServerModel.FK_EventProcessorLogicalSensorBinding_LogicalSensor", "LogicalSensor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogicalSensor>("KalitteSensorServerModel.FK_EventProcessorLogicalSensorBinding_LogicalSensor", "LogicalSensor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LogicalSensor> LogicalSensorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogicalSensor>("KalitteSensorServerModel.FK_EventProcessorLogicalSensorBinding_LogicalSensor", "LogicalSensor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LogicalSensor>("KalitteSensorServerModel.FK_EventProcessorLogicalSensorBinding_LogicalSensor", "LogicalSensor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KalitteSensorServerModel", Name="EventProcessorModuleBinding")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventProcessorModuleBinding : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventProcessorModuleBinding object.
        /// </summary>
        /// <param name="processorID">Initial value of the ProcessorID property.</param>
        /// <param name="moduleID">Initial value of the ModuleID property.</param>
        /// <param name="execOrder">Initial value of the ExecOrder property.</param>
        /// <param name="definition">Initial value of the Definition property.</param>
        /// <param name="runtime">Initial value of the Runtime property.</param>
        public static EventProcessorModuleBinding CreateEventProcessorModuleBinding(global::System.String processorID, global::System.String moduleID, global::System.Int32 execOrder, global::System.String definition, global::System.String runtime)
        {
            EventProcessorModuleBinding eventProcessorModuleBinding = new EventProcessorModuleBinding();
            eventProcessorModuleBinding.ProcessorID = processorID;
            eventProcessorModuleBinding.ModuleID = moduleID;
            eventProcessorModuleBinding.ExecOrder = execOrder;
            eventProcessorModuleBinding.Definition = definition;
            eventProcessorModuleBinding.Runtime = runtime;
            return eventProcessorModuleBinding;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProcessorID
        {
            get
            {
                return _ProcessorID;
            }
            set
            {
                if (_ProcessorID != value)
                {
                    OnProcessorIDChanging(value);
                    ReportPropertyChanging("ProcessorID");
                    _ProcessorID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProcessorID");
                    OnProcessorIDChanged();
                }
            }
        }
        private global::System.String _ProcessorID;
        partial void OnProcessorIDChanging(global::System.String value);
        partial void OnProcessorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModuleID
        {
            get
            {
                return _ModuleID;
            }
            set
            {
                if (_ModuleID != value)
                {
                    OnModuleIDChanging(value);
                    ReportPropertyChanging("ModuleID");
                    _ModuleID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ModuleID");
                    OnModuleIDChanged();
                }
            }
        }
        private global::System.String _ModuleID;
        partial void OnModuleIDChanging(global::System.String value);
        partial void OnModuleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExecOrder
        {
            get
            {
                return _ExecOrder;
            }
            set
            {
                if (_ExecOrder != value)
                {
                    OnExecOrderChanging(value);
                    ReportPropertyChanging("ExecOrder");
                    _ExecOrder = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExecOrder");
                    OnExecOrderChanged();
                }
            }
        }
        private global::System.Int32 _ExecOrder;
        partial void OnExecOrderChanging(global::System.Int32 value);
        partial void OnExecOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Definition
        {
            get
            {
                return _Definition;
            }
            set
            {
                OnDefinitionChanging(value);
                ReportPropertyChanging("Definition");
                _Definition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Definition");
                OnDefinitionChanged();
            }
        }
        private global::System.String _Definition;
        partial void OnDefinitionChanging(global::System.String value);
        partial void OnDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Runtime
        {
            get
            {
                return _Runtime;
            }
            set
            {
                OnRuntimeChanging(value);
                ReportPropertyChanging("Runtime");
                _Runtime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Runtime");
                OnRuntimeChanged();
            }
        }
        private global::System.String _Runtime;
        partial void OnRuntimeChanging(global::System.String value);
        partial void OnRuntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_EventProcessorModuleBinding_EventModule", "EventModule")]
        public EventModule EventModule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventModule>("KalitteSensorServerModel.FK_EventProcessorModuleBinding_EventModule", "EventModule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventModule>("KalitteSensorServerModel.FK_EventProcessorModuleBinding_EventModule", "EventModule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventModule> EventModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventModule>("KalitteSensorServerModel.FK_EventProcessorModuleBinding_EventModule", "EventModule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventModule>("KalitteSensorServerModel.FK_EventProcessorModuleBinding_EventModule", "EventModule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_EventProcessorModuleBinding_EventProcessor", "EventProcessor")]
        public EventProcessor EventProcessor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventProcessor>("KalitteSensorServerModel.FK_EventProcessorModuleBinding_EventProcessor", "EventProcessor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventProcessor>("KalitteSensorServerModel.FK_EventProcessorModuleBinding_EventProcessor", "EventProcessor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventProcessor> EventProcessorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventProcessor>("KalitteSensorServerModel.FK_EventProcessorModuleBinding_EventProcessor", "EventProcessor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventProcessor>("KalitteSensorServerModel.FK_EventProcessorModuleBinding_EventProcessor", "EventProcessor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KalitteSensorServerModel", Name="LogicalSensor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogicalSensor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogicalSensor object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="definition">Initial value of the Definition property.</param>
        /// <param name="runtime">Initial value of the Runtime property.</param>
        public static LogicalSensor CreateLogicalSensor(global::System.String name, global::System.String definition, global::System.String runtime)
        {
            LogicalSensor logicalSensor = new LogicalSensor();
            logicalSensor.Name = name;
            logicalSensor.Definition = definition;
            logicalSensor.Runtime = runtime;
            return logicalSensor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Definition
        {
            get
            {
                return _Definition;
            }
            set
            {
                OnDefinitionChanging(value);
                ReportPropertyChanging("Definition");
                _Definition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Definition");
                OnDefinitionChanged();
            }
        }
        private global::System.String _Definition;
        partial void OnDefinitionChanging(global::System.String value);
        partial void OnDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Runtime
        {
            get
            {
                return _Runtime;
            }
            set
            {
                OnRuntimeChanging(value);
                ReportPropertyChanging("Runtime");
                _Runtime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Runtime");
                OnRuntimeChanged();
            }
        }
        private global::System.String _Runtime;
        partial void OnRuntimeChanging(global::System.String value);
        partial void OnRuntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_EventProcessorLogicalSensorBinding_LogicalSensor", "EventProcessorLogicalSensorBinding")]
        public EntityCollection<EventProcessorLogicalSensorBinding> EventProcessorLogicalSensorBinding
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventProcessorLogicalSensorBinding>("KalitteSensorServerModel.FK_EventProcessorLogicalSensorBinding_LogicalSensor", "EventProcessorLogicalSensorBinding");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventProcessorLogicalSensorBinding>("KalitteSensorServerModel.FK_EventProcessorLogicalSensorBinding_LogicalSensor", "EventProcessorLogicalSensorBinding", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_LogicalSensorBinding_LogicalSensor", "LogicalSensorBinding")]
        public EntityCollection<LogicalSensorBinding> LogicalSensorBinding
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogicalSensorBinding>("KalitteSensorServerModel.FK_LogicalSensorBinding_LogicalSensor", "LogicalSensorBinding");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogicalSensorBinding>("KalitteSensorServerModel.FK_LogicalSensorBinding_LogicalSensor", "LogicalSensorBinding", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KalitteSensorServerModel", Name="LogicalSensorBinding")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogicalSensorBinding : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogicalSensorBinding object.
        /// </summary>
        /// <param name="logicalSensorID">Initial value of the LogicalSensorID property.</param>
        /// <param name="sensorDeviceID">Initial value of the SensorDeviceID property.</param>
        /// <param name="sensorSource">Initial value of the SensorSource property.</param>
        /// <param name="definition">Initial value of the Definition property.</param>
        /// <param name="runtime">Initial value of the Runtime property.</param>
        public static LogicalSensorBinding CreateLogicalSensorBinding(global::System.String logicalSensorID, global::System.String sensorDeviceID, global::System.String sensorSource, global::System.String definition, global::System.String runtime)
        {
            LogicalSensorBinding logicalSensorBinding = new LogicalSensorBinding();
            logicalSensorBinding.LogicalSensorID = logicalSensorID;
            logicalSensorBinding.SensorDeviceID = sensorDeviceID;
            logicalSensorBinding.SensorSource = sensorSource;
            logicalSensorBinding.Definition = definition;
            logicalSensorBinding.Runtime = runtime;
            return logicalSensorBinding;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogicalSensorID
        {
            get
            {
                return _LogicalSensorID;
            }
            set
            {
                if (_LogicalSensorID != value)
                {
                    OnLogicalSensorIDChanging(value);
                    ReportPropertyChanging("LogicalSensorID");
                    _LogicalSensorID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LogicalSensorID");
                    OnLogicalSensorIDChanged();
                }
            }
        }
        private global::System.String _LogicalSensorID;
        partial void OnLogicalSensorIDChanging(global::System.String value);
        partial void OnLogicalSensorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SensorDeviceID
        {
            get
            {
                return _SensorDeviceID;
            }
            set
            {
                if (_SensorDeviceID != value)
                {
                    OnSensorDeviceIDChanging(value);
                    ReportPropertyChanging("SensorDeviceID");
                    _SensorDeviceID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SensorDeviceID");
                    OnSensorDeviceIDChanged();
                }
            }
        }
        private global::System.String _SensorDeviceID;
        partial void OnSensorDeviceIDChanging(global::System.String value);
        partial void OnSensorDeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SensorSource
        {
            get
            {
                return _SensorSource;
            }
            set
            {
                if (_SensorSource != value)
                {
                    OnSensorSourceChanging(value);
                    ReportPropertyChanging("SensorSource");
                    _SensorSource = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SensorSource");
                    OnSensorSourceChanged();
                }
            }
        }
        private global::System.String _SensorSource;
        partial void OnSensorSourceChanging(global::System.String value);
        partial void OnSensorSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Definition
        {
            get
            {
                return _Definition;
            }
            set
            {
                OnDefinitionChanging(value);
                ReportPropertyChanging("Definition");
                _Definition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Definition");
                OnDefinitionChanged();
            }
        }
        private global::System.String _Definition;
        partial void OnDefinitionChanging(global::System.String value);
        partial void OnDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Runtime
        {
            get
            {
                return _Runtime;
            }
            set
            {
                OnRuntimeChanging(value);
                ReportPropertyChanging("Runtime");
                _Runtime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Runtime");
                OnRuntimeChanged();
            }
        }
        private global::System.String _Runtime;
        partial void OnRuntimeChanging(global::System.String value);
        partial void OnRuntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_LogicalSensorBinding_LogicalSensor", "LogicalSensor")]
        public LogicalSensor LogicalSensor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogicalSensor>("KalitteSensorServerModel.FK_LogicalSensorBinding_LogicalSensor", "LogicalSensor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogicalSensor>("KalitteSensorServerModel.FK_LogicalSensorBinding_LogicalSensor", "LogicalSensor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LogicalSensor> LogicalSensorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogicalSensor>("KalitteSensorServerModel.FK_LogicalSensorBinding_LogicalSensor", "LogicalSensor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LogicalSensor>("KalitteSensorServerModel.FK_LogicalSensorBinding_LogicalSensor", "LogicalSensor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_LogicalSensorBinding_SensorDevice", "SensorDevice")]
        public SensorDevice SensorDevice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SensorDevice>("KalitteSensorServerModel.FK_LogicalSensorBinding_SensorDevice", "SensorDevice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SensorDevice>("KalitteSensorServerModel.FK_LogicalSensorBinding_SensorDevice", "SensorDevice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SensorDevice> SensorDeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SensorDevice>("KalitteSensorServerModel.FK_LogicalSensorBinding_SensorDevice", "SensorDevice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SensorDevice>("KalitteSensorServerModel.FK_LogicalSensorBinding_SensorDevice", "SensorDevice", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KalitteSensorServerModel", Name="SensorDevice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SensorDevice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SensorDevice object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="definition">Initial value of the Definition property.</param>
        /// <param name="runtime">Initial value of the Runtime property.</param>
        public static SensorDevice CreateSensorDevice(global::System.String name, global::System.String definition, global::System.String runtime)
        {
            SensorDevice sensorDevice = new SensorDevice();
            sensorDevice.Name = name;
            sensorDevice.Definition = definition;
            sensorDevice.Runtime = runtime;
            return sensorDevice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SensorId
        {
            get
            {
                return _SensorId;
            }
            set
            {
                OnSensorIdChanging(value);
                ReportPropertyChanging("SensorId");
                _SensorId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SensorId");
                OnSensorIdChanged();
            }
        }
        private global::System.String _SensorId;
        partial void OnSensorIdChanging(global::System.String value);
        partial void OnSensorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Definition
        {
            get
            {
                return _Definition;
            }
            set
            {
                OnDefinitionChanging(value);
                ReportPropertyChanging("Definition");
                _Definition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Definition");
                OnDefinitionChanged();
            }
        }
        private global::System.String _Definition;
        partial void OnDefinitionChanging(global::System.String value);
        partial void OnDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Runtime
        {
            get
            {
                return _Runtime;
            }
            set
            {
                OnRuntimeChanging(value);
                ReportPropertyChanging("Runtime");
                _Runtime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Runtime");
                OnRuntimeChanged();
            }
        }
        private global::System.String _Runtime;
        partial void OnRuntimeChanging(global::System.String value);
        partial void OnRuntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_LogicalSensorBinding_SensorDevice", "LogicalSensorBinding")]
        public EntityCollection<LogicalSensorBinding> LogicalSensorBinding
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogicalSensorBinding>("KalitteSensorServerModel.FK_LogicalSensorBinding_SensorDevice", "LogicalSensorBinding");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogicalSensorBinding>("KalitteSensorServerModel.FK_LogicalSensorBinding_SensorDevice", "LogicalSensorBinding", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_SensorDevice_SensorProvider", "SensorProvider")]
        public SensorProvider SensorProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SensorProvider>("KalitteSensorServerModel.FK_SensorDevice_SensorProvider", "SensorProvider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SensorProvider>("KalitteSensorServerModel.FK_SensorDevice_SensorProvider", "SensorProvider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SensorProvider> SensorProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SensorProvider>("KalitteSensorServerModel.FK_SensorDevice_SensorProvider", "SensorProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SensorProvider>("KalitteSensorServerModel.FK_SensorDevice_SensorProvider", "SensorProvider", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KalitteSensorServerModel", Name="SensorProvider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SensorProvider : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SensorProvider object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="typeQ">Initial value of the TypeQ property.</param>
        /// <param name="definition">Initial value of the Definition property.</param>
        /// <param name="runtime">Initial value of the Runtime property.</param>
        public static SensorProvider CreateSensorProvider(global::System.String name, global::System.String typeQ, global::System.String definition, global::System.String runtime)
        {
            SensorProvider sensorProvider = new SensorProvider();
            sensorProvider.Name = name;
            sensorProvider.TypeQ = typeQ;
            sensorProvider.Definition = definition;
            sensorProvider.Runtime = runtime;
            return sensorProvider;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeQ
        {
            get
            {
                return _TypeQ;
            }
            set
            {
                OnTypeQChanging(value);
                ReportPropertyChanging("TypeQ");
                _TypeQ = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeQ");
                OnTypeQChanged();
            }
        }
        private global::System.String _TypeQ;
        partial void OnTypeQChanging(global::System.String value);
        partial void OnTypeQChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Definition
        {
            get
            {
                return _Definition;
            }
            set
            {
                OnDefinitionChanging(value);
                ReportPropertyChanging("Definition");
                _Definition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Definition");
                OnDefinitionChanged();
            }
        }
        private global::System.String _Definition;
        partial void OnDefinitionChanging(global::System.String value);
        partial void OnDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Runtime
        {
            get
            {
                return _Runtime;
            }
            set
            {
                OnRuntimeChanging(value);
                ReportPropertyChanging("Runtime");
                _Runtime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Runtime");
                OnRuntimeChanged();
            }
        }
        private global::System.String _Runtime;
        partial void OnRuntimeChanging(global::System.String value);
        partial void OnRuntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KalitteSensorServerModel", "FK_SensorDevice_SensorProvider", "SensorDevice")]
        public EntityCollection<SensorDevice> SensorDevice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SensorDevice>("KalitteSensorServerModel.FK_SensorDevice_SensorProvider", "SensorDevice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SensorDevice>("KalitteSensorServerModel.FK_SensorDevice_SensorProvider", "SensorDevice", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
